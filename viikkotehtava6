#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>

using namespace std;

class Student {
private:
    string name;
    int age;
public:
    Student(string name, int age) : name(name), age(age) {}
    string getName() const { return name; }
    int getAge() const { return age; }
    void printStudentInfo() const { cout << "Name: " << name << ", Age: " << age << endl; }
};

void saveStudentsToFile(const vector<Student>& studentList) {
    ofstream file("students.txt");
    for (const auto &student : studentList) {
        file << student.getName() << " " << student.getAge() << endl;
    }
    file.close();
}

void loadStudentsFromFile(vector<Student>& studentList) {
    ifstream file("students.txt");
    string name;
    int age;
    while (file >> name >> age) {
        studentList.emplace_back(name, age);
    }
    file.close();
}

int main() {
    int selection = 0;
    vector<Student> studentList;
    loadStudentsFromFile(studentList);
    
    do {
        cout << "\nSelect" << endl;
        cout << "Add students = 0" << endl;
        cout << "Print all students = 1" << endl;
        cout << "Sort and print students according to Name = 2" << endl;
        cout << "Sort and print students according to Age = 3" << endl;
        cout << "Find and print student = 4" << endl;
        cin >> selection;

        switch (selection) {
            case 0: {
                string name;
                int age;
                cout << "Enter student name: ";
                cin >> name;
                cout << "Enter student age: ";
                cin >> age;
                studentList.emplace_back(name, age);
                saveStudentsToFile(studentList);
                break;
            }
            case 1: {
                for (const auto &student : studentList) {
                    student.printStudentInfo();
                }
                break;
            }
            case 2: {
                sort(studentList.begin(), studentList.end(), [](const Student &a, const Student &b) {
                    return a.getName() < b.getName();
                });
                for (const auto &student : studentList) {
                    student.printStudentInfo();
                }
                break;
            }
            case 3: {
                sort(studentList.begin(), studentList.end(), [](const Student &a, const Student &b) {
                    return a.getAge() < b.getAge();
                });
                for (const auto &student : studentList) {
                    student.printStudentInfo();
                }
                break;
            }
            case 4: {
                string name;
                cout << "Enter student name to find: ";
                cin >> name;
                auto it = find_if(studentList.begin(), studentList.end(), [&](const Student &s) {
                    return s.getName() == name;
                });
                if (it != studentList.end()) {
                    it->printStudentInfo();
                } else {
                    cout << "Student not found." << endl;
                }
                break;
            }
            default:
                cout << "Wrong selection, stopping..." << endl;
                break;
        }
    } while (selection < 5);
    return 0;
}
